#include <LiquidCrystal.h>
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);  // LCD 제어를 위한 핀 설정

int lcd_key     = 0;
int adc_key_in  = 0;
int set=0;
#define btnRIGHT  0
#define btnUP     1
#define btnDOWN   2
#define btnLEFT   3
#define btnSELECT 4
#define btnNONE   5
int read_LCD_buttons()
{
 adc_key_in = analogRead(0);      // AO 핀으로부터 아날로그값을 읽어옴
 // 읽어온 아날로그의 값에 따라 눌려진 버튼을 판단함
 if (adc_key_in > 1000) return btnNONE; 
 if (adc_key_in < 50)   return btnRIGHT;  
 if (adc_key_in < 250)  return btnUP; 
 if (adc_key_in < 400)  return btnDOWN; 
 if (adc_key_in < 600)  return btnLEFT; 
 if (adc_key_in < 850)  return btnSELECT;  
 return btnNONE;  // 안눌리면 이것으로
}
void setup()
{
 lcd.begin(16, 2);              // LCD 초기화
 lcd.setCursor(2,0);	 	//LCD 쓰이는 커서 설정
 lcd.print("Select Menu!"); // LCD에 출력되는 글
}
 
void loop()
{ 
 char menu0[]="Practice Mode";
 char menu1[]="Challenge Mode";
 lcd.setCursor(0,1);            // 2번째 줄(1) 1번째(0) 패널에 위치하고
 lcd_key = read_LCD_buttons();  // 버튼이 눌려진 이름 출력하는 함수 호출
 switch (lcd_key)               // 버튼 판단
 {
   case btnRIGHT:
     {
     if(set==0) set=1;
     else set=0;
     break;
     }
   case btnLEFT:
     {
     if(set==0) set=1;
     else set=0;
     break;
     }
   case btnUP:
     {
     lcd.print("UP    ");
     break;
     }
   case btnDOWN:
     {
     lcd.print("DOWN  ");
     break;
     }
   case btnSELECT:
     {
     lcd.print("SELECT");
     break;
     }
     case btnNONE:
     {
     if(set==0) {
      
      lcd.print(menu0);
     }
     else lcd.print(menu1);
     break;
     }
 }
}